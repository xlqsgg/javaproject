/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.81
 * Generated at: 2018-07-28 16:26:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\r\n");
      out.write("\t<title>用户注册</title>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tfunction get_syn() {\r\n");
      out.write("\t\tvar xhr=new XMLHttpRequest();//创建AJAX操作对象（get,post）\r\n");
      out.write("\t\txhr.open(\"GET\", \"uname.action?uname=\"+document.getElementById(\"uname\").value, false);//请求提交的方式(get|post),请求提交的页面(url),请求提交的处理方式(true异步处理,false同步处理)，\r\n");
      out.write("\t\txhr.setRequestHeader(\"cache-control\", \"no-cache\");//设置请求的参数meta\r\n");
      out.write("\t\txhr.setRequestHeader(\"Content-Type\", \"text/html;charset=utf-8\");//设置请求的参数meta\r\n");
      out.write("\t\txhr.send(null);//AJAX发送请求(同步,中断)\r\n");
      out.write("\t\tvar result=xhr.status;//获取AJAX请求的执行结果(Http的错误编号)\r\n");
      out.write("\t\tif (result==200) { //服务端执行成功\r\n");
      out.write("\t\t    alert(xhr.responseText);//xhr.responseText获取服务端返回的内容\r\n");
      out.write("\t\t} else { //服务端执行失败\r\n");
      out.write("\t\t   alert(result);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction get_syn_no() {\r\n");
      out.write("\t\tvar xhr=new XMLHttpRequest();//创建AJAX操作对象（get,post）\r\n");
      out.write("\t\txhr.open(\"GET\", \"uname.action?uname=\"+document.getElementById(\"uname\").value, true);//请求提交的方式(get|post),请求提交的页面(url),请求提交的处理方式(true异步处理,false同步处理)，\r\n");
      out.write("\t\txhr.setRequestHeader(\"cache-control\", \"no-cache\");//设置请求的参数meta\r\n");
      out.write("\t\txhr.setRequestHeader(\"Content-Type\", \"text/html;charset=utf-8\");//设置请求的参数meta\r\n");
      out.write("\t\txhr.onreadystatechange=function() { //当服务器端处理请求的过程中,自动调用该函数.\r\n");
      out.write("\t\t    if (xhr.readyState==4) { //判断请求处理是否结束\r\n");
      out.write("\t\t\t    var result=xhr.status;//获取AJAX请求的执行结果(Http的错误编号)\r\n");
      out.write("\t\t\t\tif (result==200) { //服务端执行成功\r\n");
      out.write("\t\t\t\t    alert(xhr.responseText);//xhr.responseText获取服务端返回的内容\r\n");
      out.write("\t\t\t\t} else { //服务端执行失败\r\n");
      out.write("\t\t\t\t   alert(result);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\txhr.send(null);//AJAX发送请求(同步,中断)\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction post_syn(){\r\n");
      out.write("   \tvar xhr=new XMLHttpRequest();\r\n");
      out.write("   \txhr.open(\"POST\", \"uname.action\", false);\r\n");
      out.write("\txhr.setRequestHeader(\"cache-control\", \"no-cache\");\r\n");
      out.write("\txhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\r\n");
      out.write("\txhr.send(\"uname=\"+document.getElementById(\"uname\").value);\r\n");
      out.write("\tvar result=xhr.status;\r\n");
      out.write("\tif(result==200){\r\n");
      out.write("   \t    alert(xhr.responseText);\r\n");
      out.write("    }else{\r\n");
      out.write("        alert(result);\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form id=\"form\" action=\"login.action\" method=\"post\">\r\n");
      out.write("        <span>用户名称:</span><input id=\"uname\" name=\"uname\" type=\"text\" onblur=\"post_syn();\"/><br/>\r\n");
      out.write("        <span>用户密码:</span><input id=\"uword\" name=\"uword\" type=\"text\"/><br/>\r\n");
      out.write("        <span>确认密码:</span><input id=\"rword\" name=\"rword\" type=\"text\"/><br/>\r\n");
      out.write("        <input id=\"enter_submit\" type=\"submit\" value=\" 注 册 \"/> <input type=\"button\" value=\" 返 回 \" onclick=\"location.href='login.jsp';\"/>\r\n");
      out.write("    </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
